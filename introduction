> 1.12.toString()
'1.12'

> 1..toString()
'1'

> (new Number(1.12)).toString()
'1.12'

> "ab"+"de"
'abde'

> 5+'c'
'5c'

> 'dssfsd'.length
6

> "qjhksjhdfjsd"[6]
'h'

> 1/0
Infinity

> 1/0.0000000001
10000000000

> 'abc\
... def'
'abcdef'

> `jgfd
... hfhg
... sd
... s
... s
... d
... sq`
'jgfd\nhfhg\nsd\ns\ns\nd\nsq'

> 1==1
true

> k=2
2
> 5==k
false

> var foo
undefined
> var foo = 'hello'
undefined
> foo == 'hello'
true

> foo + 5
'hello5'

> var objet = {a: 'a', b: 12, c:{}}
undefined
> objet.a
'a'
> objet.b
12
> objet['b']
12
> var g = 'b'
undefined
> objet[g]
12

> new Date()
2016-09-07T06:44:19.999Z

> /^foo(bar)?$/i
/^foo(bar)?$/i

> /^foo(bar)?$/i.test('foo')
true

> /^foo(bar)?$/i.test('foob')
false

> 'foo'.match(/^foo(bar)?$/i)
[ 'foo', undefined, index: 0, input: 'foo' ]

> var err = new Error('shit happens');
undefined

> err.code = 101;
101

> err.message
'shit happens'
> try{
... throw new Error('shit happens');
... } catch(err){
... console.error(err.message, err.stack);
... } finally {
... console.log('done');
... }
shit happens Error: shit happens
    at repl:2:7
    at sigintHandlersWrap (vm.js:22:35)
    at sigintHandlersWrap (vm.js:96:12)
    at ContextifyScript.Script.runInThisContext (vm.js:21:12)
    at REPLServer.defaultEval (repl.js:313:29)
    at bound (domain.js:280:14)
    at REPLServer.runBound [as eval] (domain.js:293:12)
    at REPLServer.<anonymous> (repl.js:504:10)
    at emitOne (events.js:101:20)
    at REPLServer.emit (events.js:188:7)
done
undefined

> console.log('hello world')
hello world
undefined

> 1 == '1'
true

> 1 == 'true'
false

> 1 == true
true

> 0 == false
true

> 1 === '1'
false

> 1 != '1'
false

> 1 !== '1'
true

> 2<1
false

> 2>1
true

> 1/0 === Infinity
true

> 1/0 == Infinity
true

> var i = 1
undefined

> i++
1

> ++i
3

> --i
2

> i--
2

> i
1

> !1
false

> !!1
true

> 1 && 3 && 2
2

> function add(a, b){
... b = !b && typeof b !== 'number' ? 3 : b;
... return a + b;
... }
undefined

> add(5)
8

> add(5,6)
11

> add(5,0)
5

> var arr = ['a','b','c','d'];
undefined

> arr.forEach(function(value, index, array){
... console.log(value, index);
... });
a 0
b 1
c 2
d 3
undefined

> var arr2 = arr.map(function(elem) {
... return elem +2;
... });
undefined

> arr2
[ 'a2', 'b2', 'c2', 'd2' ]

> var arr3 = arr.reduce(function(res, elem) {
... return res + elem;
... });
undefined

> arr3
'abcd'
